<Window x:Class="HouseholdAccountBook.Windows.CsvComparisonWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:project="clr-namespace:HouseholdAccountBook"
        xmlns:properties="clr-namespace:HouseholdAccountBook.Properties"
        xmlns:viewmodels="clr-namespace:HouseholdAccountBook.ViewModels"
        xmlns:behaviors="clr-namespace:HouseholdAccountBook.Behaviors"
        mc:Ignorable="d"
        Title="{x:Static properties:Resources.Title_CsvComparisonWindow}"
        Height="450" Width="600" WindowStyle="ToolWindow"
        Loaded="CsvComparisonWindow_Loaded" 
        Closed="CsvComparisonWindow_Closed">
    <Window.DataContext>
        <viewmodels:CsvComparisonWindowViewModel x:Name="WVM"/>
    </Window.DataContext>

    <Window.Resources>
        <!-- ファイルコマンド -->
        <RoutedCommand x:Key="MoveCsvFilesCommand"/>
        <RoutedCommand x:Key="ExitWindowCommand"/>

        <!-- 編集コマンド -->
        <RoutedCommand x:Key="AddActionCommand"/>
        <RoutedCommand x:Key="EditActionCommand"/>
        <RoutedCommand x:Key="BulkCheckCommand"/>
        <RoutedCommand x:Key="AddOrEditActionCommand"/>

        <!-- 表示コマンド -->
        <RoutedCommand x:Key="UpdateListCommand"/>
        <RoutedCommand x:Key="ClearListCommand"/>
        
        <!-- その他コマンド -->
        <RoutedCommand x:Key="ChangeIsMatchCommand"/>

        <!-- スタイル -->
        <Style x:Key="DayOfWeekStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Record.Date.DayOfWeek}" Value="Taturday">
                    <Setter Property="Foreground" Value="Blue"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Record.Date.DayOfWeek}" Value="Sunday">
                    <Setter Property="Foreground" Value="Red"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Record.Date, Converter={StaticResource DateTimeToIsNationalHolidayConverter}}" Value="true">
                    <Setter Property="Foreground" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.CommandBindings>
        <!-- ファイルコマンド -->
        <CommandBinding Command="{x:Static ApplicationCommands.Open}" CanExecute="OpenCsvFilesCommand_CanExecute" Executed="OpenCsvFilesCommand_Executed"/>
        <CommandBinding Command="{StaticResource MoveCsvFilesCommand}" CanExecute="MoveCsvFilesCommand_CanExecute" Executed="MoveCsvFilesCommand_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Close}" CanExecute="CloseCsvFilesCommand_CanExecute" Executed="CloseCsvFilesCommand_Executed"/>
        <CommandBinding Command="{StaticResource ExitWindowCommand}" Executed="ExitWindowCommand_Executed"/>

        <!-- 編集コマンド -->
        <CommandBinding Command="{StaticResource AddActionCommand}" CanExecute="AddActionCommand_CanExecute" Executed="AddActionCommand_Executed"/>
        <CommandBinding Command="{StaticResource EditActionCommand}" CanExecute="EditActionCommand_CanExecute" Executed="EditActionCommand_Executed"/>
        <CommandBinding Command="{StaticResource BulkCheckCommand}" CanExecute="BulkCheckCommand_CanExecute" Executed="BulkCheckCommand_Executed"/>
        
        <CommandBinding Command="{StaticResource AddOrEditActionCommand}" CanExecute="AddOrEditActionCommand_CanExecute" Executed="AddOrEditActionCommand_Executed"/>

        <!-- 表示コマンド -->
        <CommandBinding Command="{StaticResource UpdateListCommand}" CanExecute="UpdateListCommand_CanExecute" Executed="UpdateListCommand_Executed"/>
        
        <!-- その他コマンド -->
        <CommandBinding Command="{StaticResource ChangeIsMatchCommand}" Executed="ChangeIsMatchCommand_Executed"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Gesture="Alt+F4" Command="{StaticResource ExitWindowCommand}"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="{x:Static properties:Resources.Menu_File}">
                <MenuItem Header="{x:Static properties:Resources.Menu_File_Open}" Command="{x:Static ApplicationCommands.Open}" InputGestureText="Ctrl+O"/>
                <Separator/>
                <MenuItem Header="{x:Static properties:Resources.Menu_File_Move}" Command="{StaticResource MoveCsvFilesCommand}" InputGestureText="Ctrl+M"/>
                <Separator/>
                <MenuItem Header="{x:Static properties:Resources.Menu_File_Close}" Command="{x:Static ApplicationCommands.Close}"/>
                <Separator/>
                <MenuItem Header="{x:Static properties:Resources.Menu_File_Exit}" Command="{StaticResource ExitWindowCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.Menu_Edit}">
                <MenuItem Header="{x:Static properties:Resources.Menu_Edit_Add}" Command="{StaticResource AddActionCommand}" InputGestureText="Ctrl++"/>
                <MenuItem Header="{x:Static properties:Resources.Menu_Edit_Edit}" Command="{StaticResource EditActionCommand}" InputGestureText="F2"/>
                <Separator/>
                <MenuItem Header="{x:Static properties:Resources.Menu_Edit_BulkCheck}" Command="{StaticResource BulkCheckCommand}" InputGestureText="Ctrl+B"/>
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.Menu_View}">
                <MenuItem Header="{x:Static properties:Resources.Menu_View_Update}" Command="{StaticResource UpdateListCommand}" InputGestureText="F5"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="5,0" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Margin="0,5" Width="50" Content="{x:Static properties:Resources.Button_Open}" Command="{x:Static ApplicationCommands.Open}"/>
                <Button Grid.Column="2" Margin="0,5" Width="50" Content="{x:Static properties:Resources.Button_Move}" Command="{StaticResource MoveCsvFilesCommand}"/>
                <Button Grid.Column="3" Margin="3,5,0,5" Width="50" Content="{x:Static properties:Resources.Button_Close}" Command="{x:Static ApplicationCommands.Close}"/>
            </Grid>

            <Grid Grid.Row="1" Margin="25,0">
                <TextBlock VerticalAlignment="Center">
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_CsvFiles}"/>:
                    <TextBlock Text="{Binding CsvFilePathes, TargetNullValue='--'}"/>
                    (<TextBlock Text="{Binding CsvFilePathList.Count, TargetNullValue='0'}"/>)
                </TextBlock>
            </Grid>
            
            <Grid Grid.Row="2" Margin="5,0" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ComboBox Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,5" MinWidth="150"
                          ItemsSource="{Binding BookVMList}" SelectedItem="{Binding SelectedBookVM}" DisplayMemberPath="Name"/>
                <Button Grid.Column="2" Margin="0,5" Width="50" Content="{x:Static properties:Resources.Button_Add}" Command="{StaticResource AddActionCommand}"/>
                <Button Grid.Column="3" Margin="3,5,0,5" Width="50" Content="{x:Static properties:Resources.Button_Edit}" Command="{StaticResource EditActionCommand}"/>
                <Button Grid.Column="4" Margin="3,5,0,5" Width="80" Content="{x:Static properties:Resources.Button_BulkCheck}" Command="{StaticResource BulkCheckCommand}"/>
            </Grid>

            <Grid Grid.Row="3" Margin="25,0">
                <TextBlock VerticalAlignment="Center">
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_CsvFolder}"/>: <TextBlock Text="{Binding SelectedBookVM.CsvFolderPath, TargetNullValue='--'}"/>
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_Date}"/>: <TextBlock Text="{Binding SelectedBookVM.ActDateIndex, TargetNullValue='--'}"/> <TextBlock Text="{x:Static properties:Resources.TextBlock_ColumnUnit}"/>
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_Expenses}"/>: <TextBlock Text="{Binding SelectedBookVM.ExpensesIndex, TargetNullValue='--'}"/> <TextBlock Text="{x:Static properties:Resources.TextBlock_ColumnUnit}"/>
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_ItemName}"/>: <TextBlock Text="{Binding SelectedBookVM.ItemNameIndex, TargetNullValue='--'}"/> <TextBlock Text="{x:Static properties:Resources.TextBlock_ColumnUnit}"/>
                </TextBlock>
            </Grid>

            <DataGrid x:Name="csvCompDataGrid" Grid.Row="4" Margin="5,5"
                    ItemsSource="{Binding CsvComparisonVMList}" SelectedItem="{Binding SelectedCsvComparisonVM}" SelectionUnit="FullRow" IsReadOnly="True"
                    CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" FrozenColumnCount="3"
                    AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="True" 
                    HorizontalGridLinesBrush="#FFF0F0F0" VerticalGridLinesBrush="#FFF0F0F0" AlternatingRowBackground="#FFFFFFE0" FontSize="10.5" FontFamily="Meiryo">
                <DataGrid.Resources>
                    <project:BindingProxy x:Key="Proxy" DataContext="{Binding}"/>
                </DataGrid.Resources>
                <DataGrid.InputBindings>
                    <KeyBinding Gesture="F2" Command="{StaticResource EditActionCommand}"/>
                    <KeyBinding Gesture="Enter" Command="{StaticResource AddOrEditActionCommand}"/>
                    <KeyBinding Gesture="Ctrl+B" Command="{StaticResource BulkCheckCommand}"/>
                    <MouseBinding Gesture="LeftDoubleClick" Command="{StaticResource AddOrEditActionCommand}"/>
                </DataGrid.InputBindings>
                <i:Interaction.Behaviors>
                    <behaviors:BindSelectedItemsToDataGridBehavior SelectedItems="{Binding SelectedCsvComparisonVMList, Mode=OneWay}"/>
                </i:Interaction.Behaviors>
                <DataGrid.ItemContainerStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="IsSelected" Value="{Binding SelectFlag}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActionId}" Value="{x:Null}">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.ItemContainerStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="{x:Static properties:Resources.ColumnHeader_Match}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsMatch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MouseEnter="CheckBox_MouseEnter"
                                           Command="{StaticResource ChangeIsMatchCommand}">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ActionId}" Value="{x:Null}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_Date}" Binding="{Binding Record.Date, StringFormat='yyyy-MM-dd'}"/>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_Day}" Binding="{Binding Record.Date, Converter={StaticResource DateTimeToDayOfWeekConverter}, ConverterCulture={StaticResource AppCulture}}"
                                        CellStyle="{StaticResource DayOfWeekStyle}"/>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_Expenses}" Width="{Binding App_ColumnWidth_Value, Source={StaticResource Settings}}" Binding="{Binding Record.Value, Converter={StaticResource IntToMoneyDisplayConverter}}" 
                                        ElementStyle="{StaticResource TextAlignRight}"/>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_CSVItemName}" Binding="{Binding Record.Name}"/>
                    <DataGridTextColumn Header="Id" Binding="{Binding ActionId}"
                                        Visibility="{Binding App_IsDebug, Source={StaticResource Settings}, Converter={StaticResource BoolVisibilityConverter}}"/>
                    <DataGridTextColumn Header="GId" Binding="{Binding GroupId}"
                                        Visibility="{Binding App_IsDebug, Source={StaticResource Settings}, Converter={StaticResource BoolVisibilityConverter}}"/>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_ItemName}" Width="*" Binding="{Binding ItemName}"/>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_ShopName}" Width="*" Binding="{Binding ShopName}"/>
                    <DataGridTextColumn Header="{x:Static properties:Resources.ColumnHeader_Remark}" Width="*" Binding="{Binding Remark}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <StatusBar Grid.Row="2">
            <StatusBarItem HorizontalContentAlignment="Right">
                <TextBlock Margin="5,0" VerticalAlignment="Center">
                    [<TextBlock Text="{x:Static properties:Resources.TextBlock_Whole}"/>]
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_Checked}"/>: 
                    <TextBlock Text="{Binding AllCheckedCount}"/> / <TextBlock Text="{Binding AllCount}"/><TextBlock Text="  "/>
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_Sum}"/>:
                    <TextBlock Text="{Binding AllSumValue, Converter={StaticResource IntToMoneyDisplayConverter}}"/><TextBlock Text="  "/>
                    [<TextBlock Text="{x:Static properties:Resources.TextBlock_Selection}"/>]
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_Checked}"/>:
                    <TextBlock Text="{Binding SelectedCheckedCount}"/> / <TextBlock Text="{Binding SelectedCount}"/><TextBlock Text="  "/>
                    <TextBlock Text="{x:Static properties:Resources.TextBlock_Sum}"/>:
                    <TextBlock Text="{Binding SelectedSumValue, Converter={StaticResource IntToMoneyDisplayConverter}}"/>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
